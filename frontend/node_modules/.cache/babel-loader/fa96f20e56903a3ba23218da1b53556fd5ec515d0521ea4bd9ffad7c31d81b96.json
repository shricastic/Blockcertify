{"ast":null,"code":"var _jsxFileName = \"/home/shri/code/workspc/Block-certify2/frontend/src/components/other/Certificate.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { jsPDF } from 'jspdf';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Certificate = ({\n  name,\n  prn,\n  course,\n  date,\n  hashCode\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const image = canvas.toDataURL('image/png');\n    const pdf = new jsPDF('landscape');\n    pdf.addImage(image, 'PNG', 0, 0, 297, 210); // Adjust dimensions as needed\n    pdf.save(`${name}_certificate.pdf`);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const certificateImage = new Image();\n    certificateImage.src = require('../../assets/certificate.png');\n    certificateImage.onload = () => {\n      ctx.drawImage(certificateImage, 0, 0, canvas.width, canvas.height);\n      ctx.font = 'bold 20px Arial';\n      ctx.fillStyle = 'black';\n      ctx.fillText(`${course}`, 350, 340);\n      ctx.fillText(`${prn}`, 340, 390);\n      ctx.font = 'bold 30px Times New Roman';\n      ctx.fillText(`${name}`, 270, 260);\n      ctx.font = '13px Arial';\n      ctx.fillText(`${hashCode}`, 5, 580);\n    };\n  }, [name, prn, course, date, hashCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      width: 800,\n      height: 600\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDownload,\n      children: \"Download Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Certificate, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = Certificate;\nexport default Certificate;\nvar _c;\n$RefreshReg$(_c, \"Certificate\");","map":{"version":3,"names":["React","useRef","useEffect","jsPDF","jsxDEV","_jsxDEV","Certificate","name","prn","course","date","hashCode","_s","canvasRef","handleDownload","canvas","current","image","toDataURL","pdf","addImage","save","ctx","getContext","certificateImage","Image","src","require","onload","drawImage","width","height","font","fillStyle","fillText","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/shri/code/workspc/Block-certify2/frontend/src/components/other/Certificate.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport { jsPDF } from 'jspdf';\n\nconst Certificate = ({ name, prn, course, date, hashCode }) => {\n  const canvasRef = useRef(null);\n\n  const handleDownload = () => {\n    const canvas = canvasRef.current;\n    const image = canvas.toDataURL('image/png');\n    const pdf = new jsPDF('landscape');\n    pdf.addImage(image, 'PNG', 0, 0, 297, 210); // Adjust dimensions as needed\n    pdf.save(`${name}_certificate.pdf`);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    const certificateImage = new Image();\n    certificateImage.src = require('../../assets/certificate.png');\n    certificateImage.onload = () => {\n      ctx.drawImage(certificateImage, 0, 0, canvas.width, canvas.height);\n\n      \n\n      ctx.font = 'bold 20px Arial';\n      ctx.fillStyle = 'black';\n      ctx.fillText(`${course}`, 350, 340);\n      ctx.fillText(`${prn}`, 340, 390);\n      ctx.font = 'bold 30px Times New Roman';\n      ctx.fillText(`${name}`, 270, 260);\n      ctx.font = '13px Arial';\n      ctx.fillText(`${hashCode}`, 5, 580);\n\n    };\n  }, [name, prn, course, date, hashCode]);\n\n  return (\n    <div>\n      <canvas ref={canvasRef} width={800} height={600} />\n      <button onClick={handleDownload}>Download Certificate</button>\n    </div>\n  );\n};\n\nexport default Certificate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,SAASC,KAAK,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAEC,GAAG;EAAEC,MAAM;EAAEC,IAAI;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7D,MAAMC,SAAS,GAAGZ,MAAM,CAAC,IAAI,CAAC;EAE9B,MAAMa,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMC,KAAK,GAAGF,MAAM,CAACG,SAAS,CAAC,WAAW,CAAC;IAC3C,MAAMC,GAAG,GAAG,IAAIhB,KAAK,CAAC,WAAW,CAAC;IAClCgB,GAAG,CAACC,QAAQ,CAACH,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC;IAC5CE,GAAG,CAACE,IAAI,CAAE,GAAEd,IAAK,kBAAiB,CAAC;EACrC,CAAC;EAEDL,SAAS,CAAC,MAAM;IACd,MAAMa,MAAM,GAAGF,SAAS,CAACG,OAAO;IAChC,MAAMM,GAAG,GAAGP,MAAM,CAACQ,UAAU,CAAC,IAAI,CAAC;IAEnC,MAAMC,gBAAgB,GAAG,IAAIC,KAAK,CAAC,CAAC;IACpCD,gBAAgB,CAACE,GAAG,GAAGC,OAAO,CAAC,8BAA8B,CAAC;IAC9DH,gBAAgB,CAACI,MAAM,GAAG,MAAM;MAC9BN,GAAG,CAACO,SAAS,CAACL,gBAAgB,EAAE,CAAC,EAAE,CAAC,EAAET,MAAM,CAACe,KAAK,EAAEf,MAAM,CAACgB,MAAM,CAAC;MAIlET,GAAG,CAACU,IAAI,GAAG,iBAAiB;MAC5BV,GAAG,CAACW,SAAS,GAAG,OAAO;MACvBX,GAAG,CAACY,QAAQ,CAAE,GAAEzB,MAAO,EAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACnCa,GAAG,CAACY,QAAQ,CAAE,GAAE1B,GAAI,EAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MAChCc,GAAG,CAACU,IAAI,GAAG,2BAA2B;MACtCV,GAAG,CAACY,QAAQ,CAAE,GAAE3B,IAAK,EAAC,EAAE,GAAG,EAAE,GAAG,CAAC;MACjCe,GAAG,CAACU,IAAI,GAAG,YAAY;MACvBV,GAAG,CAACY,QAAQ,CAAE,GAAEvB,QAAS,EAAC,EAAE,CAAC,EAAE,GAAG,CAAC;IAErC,CAAC;EACH,CAAC,EAAE,CAACJ,IAAI,EAAEC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAEvC,oBACEN,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAQ+B,GAAG,EAAEvB,SAAU;MAACiB,KAAK,EAAE,GAAI;MAACC,MAAM,EAAE;IAAI;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnDnC,OAAA;MAAQoC,OAAO,EAAE3B,cAAe;MAAAqB,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3D,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxCIN,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AA0CjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}