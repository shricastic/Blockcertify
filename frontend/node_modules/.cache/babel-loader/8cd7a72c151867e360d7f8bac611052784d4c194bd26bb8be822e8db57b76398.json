{"ast":null,"code":"var _jsxFileName = \"/home/shri/code/workspc/Block-certify2/frontend/src/components/admin/AddCertificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AddCertificate = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [prn, setPrn] = useState('');\n  const [course, setCourse] = useState('');\n  const [date, setDate] = useState('');\n  const [issuedBy, setIssuedBy] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'prn':\n        setPrn(value);\n        break;\n      case 'course':\n        setCourse(value);\n        break;\n      case 'date':\n        setDate(value);\n        break;\n      case 'issuedBy':\n        setIssuedBy(value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    setCsvFile(file);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await axios.post(\"http://localhost:3001/admin/add-cert\", {\n        name,\n        email,\n        prn,\n        course,\n        date,\n        issuedBy\n      });\n      console.log('Certificate added successfully');\n    } catch (error) {\n      console.error('Error adding certificate:', error);\n    }\n  };\n  const parseCSV = file => {\n    // Placeholder function to parse CSV file and return array of certificate records\n    // Implement or use a CSV parsing library like csv-parse or papaparse\n    return [];\n  };\n  const handleSubmitCSV = async e => {\n    e.preventDefault();\n    try {\n      if (!csvFile) {\n        console.error('No CSV file selected');\n        return;\n      }\n      const certificateRecords = parseCSV(csvFile);\n      for (const record of certificateRecords) {\n        const {\n          name,\n          email,\n          prn,\n          course,\n          date,\n          issuedBy\n        } = record;\n        await axios.post(\"http://localhost:3001/admin/add-cert\", {\n          name,\n          email,\n          prn,\n          course,\n          date,\n          issuedBy\n        });\n      }\n      console.log('Certificates added successfully');\n    } catch (error) {\n      console.error('Error adding certificates:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" Add New Certificate \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            placeholder: \"Name\",\n            value: name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"prn\",\n            placeholder: \"PRN\",\n            value: prn,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"course\",\n            placeholder: \"Course\",\n            value: course,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"date\",\n            placeholder: \"Date\",\n            value: date,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"issuedBy\",\n            placeholder: \"Issued By\",\n            value: issuedBy,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            value: \"Submit\",\n            children: \"Create New Certificate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"______________________\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmitCSV,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"csvFile\",\n            onChange: handleFileChange,\n            accept: \".csv\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload CSV\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(AddCertificate, \"61cALvUtBmpUoE9V2xGn/GXkNwc=\");\n_c = AddCertificate;\nexport default AddCertificate;\nvar _c;\n$RefreshReg$(_c, \"AddCertificate\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AddCertificate","_s","name","setName","email","setEmail","prn","setPrn","course","setCourse","date","setDate","issuedBy","setIssuedBy","csvFile","setCsvFile","handleChange","e","value","target","handleFileChange","file","files","handleSubmit","preventDefault","post","console","log","error","parseCSV","handleSubmitCSV","certificateRecords","record","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","accept","_c","$RefreshReg$"],"sources":["/home/shri/code/workspc/Block-certify2/frontend/src/components/admin/AddCertificate.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AddCertificate = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [prn, setPrn] = useState('');\n  const [course, setCourse] = useState('');\n  const [date, setDate] = useState('');\n  const [issuedBy, setIssuedBy] = useState('');\n  const [csvFile, setCsvFile] = useState(null);\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'prn':\n        setPrn(value);\n        break;\n      case 'course':\n        setCourse(value);\n        break;\n      case 'date':\n        setDate(value);\n        break;\n      case 'issuedBy':\n        setIssuedBy(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    setCsvFile(file);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      await axios.post(\"http://localhost:3001/admin/add-cert\", { name, email, prn, course, date, issuedBy });\n      console.log('Certificate added successfully');\n    } catch (error) {\n      console.error('Error adding certificate:', error);\n    }\n  };\n\n  const parseCSV = (file) => {\n    // Placeholder function to parse CSV file and return array of certificate records\n    // Implement or use a CSV parsing library like csv-parse or papaparse\n    return [];\n  };\n\n  const handleSubmitCSV = async (e) => {\n    e.preventDefault();\n    try {\n      if (!csvFile) {\n        console.error('No CSV file selected');\n        return;\n      }\n      const certificateRecords = parseCSV(csvFile);\n\n      for (const record of certificateRecords) {\n        const { name, email, prn, course, date, issuedBy } = record;\n        await axios.post(\"http://localhost:3001/admin/add-cert\", { name, email, prn, course, date, issuedBy });\n      }\n      console.log('Certificates added successfully');\n    } catch (error) {\n      console.error('Error adding certificates:', error);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"login-form\">\n          <h1> Add New Certificate </h1>\n          <form onSubmit={handleSubmit}>\n            <input type=\"text\" name=\"name\" placeholder=\"Name\" value={name} onChange={handleChange} />\n            <input type=\"text\" name=\"email\" placeholder=\"Email\" value={email} onChange={handleChange} />\n            <input type=\"text\" name=\"prn\" placeholder=\"PRN\" value={prn} onChange={handleChange} />\n            <input type=\"text\" name=\"course\" placeholder=\"Course\" value={course} onChange={handleChange} />\n            <input type=\"text\" name=\"date\" placeholder=\"Date\" value={date} onChange={handleChange} />\n            <input type=\"text\" name=\"issuedBy\" placeholder=\"Issued By\" value={issuedBy} onChange={handleChange} />\n            <button type=\"submit\" value=\"Submit\">Create New Certificate</button>\n          </form>\n\n          <h1>______________________</h1>\n\n          <form onSubmit={handleSubmitCSV}>\n            <input type=\"file\" name=\"csvFile\" onChange={handleFileChange} accept=\".csv\" />\n            <button type=\"submit\">Upload CSV</button>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default AddCertificate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,GAAG,EAAEC,MAAM,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACgB,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMsB,YAAY,GAAIC,CAAC,IAAK;IAC1B,MAAM;MAAEf,IAAI;MAAEgB;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAEhC,QAAQjB,IAAI;MACV,KAAK,MAAM;QACTC,OAAO,CAACe,KAAK,CAAC;QACd;MACF,KAAK,OAAO;QACVb,QAAQ,CAACa,KAAK,CAAC;QACf;MACF,KAAK,KAAK;QACRX,MAAM,CAACW,KAAK,CAAC;QACb;MACF,KAAK,QAAQ;QACXT,SAAS,CAACS,KAAK,CAAC;QAChB;MACF,KAAK,MAAM;QACTP,OAAO,CAACO,KAAK,CAAC;QACd;MACF,KAAK,UAAU;QACbL,WAAW,CAACK,KAAK,CAAC;QAClB;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAME,gBAAgB,GAAIH,CAAC,IAAK;IAC9B,MAAMI,IAAI,GAAGJ,CAAC,CAACE,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;IAC9BP,UAAU,CAACM,IAAI,CAAC;EAClB,CAAC;EAED,MAAME,YAAY,GAAG,MAAON,CAAC,IAAK;IAChCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAElB,IAAI;MACF,MAAM7B,KAAK,CAAC8B,IAAI,CAAC,sCAAsC,EAAE;QAAEvB,IAAI;QAAEE,KAAK;QAAEE,GAAG;QAAEE,MAAM;QAAEE,IAAI;QAAEE;MAAS,CAAC,CAAC;MACtGc,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAMC,QAAQ,GAAIR,IAAI,IAAK;IACzB;IACA;IACA,OAAO,EAAE;EACX,CAAC;EAED,MAAMS,eAAe,GAAG,MAAOb,CAAC,IAAK;IACnCA,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,IAAI,CAACV,OAAO,EAAE;QACZY,OAAO,CAACE,KAAK,CAAC,sBAAsB,CAAC;QACrC;MACF;MACA,MAAMG,kBAAkB,GAAGF,QAAQ,CAACf,OAAO,CAAC;MAE5C,KAAK,MAAMkB,MAAM,IAAID,kBAAkB,EAAE;QACvC,MAAM;UAAE7B,IAAI;UAAEE,KAAK;UAAEE,GAAG;UAAEE,MAAM;UAAEE,IAAI;UAAEE;QAAS,CAAC,GAAGoB,MAAM;QAC3D,MAAMrC,KAAK,CAAC8B,IAAI,CAAC,sCAAsC,EAAE;UAAEvB,IAAI;UAAEE,KAAK;UAAEE,GAAG;UAAEE,MAAM;UAAEE,IAAI;UAAEE;QAAS,CAAC,CAAC;MACxG;MACAc,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;IAChD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACE/B,OAAA,CAAAE,SAAA;IAAAkC,QAAA,eACEpC,OAAA;MAAKqC,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBpC,OAAA;QAAKqC,SAAS,EAAC,YAAY;QAAAD,QAAA,gBACzBpC,OAAA;UAAAoC,QAAA,EAAI;QAAqB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC9BzC,OAAA;UAAM0C,QAAQ,EAAEhB,YAAa;UAAAU,QAAA,gBAC3BpC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,MAAM;YAACuC,WAAW,EAAC,MAAM;YAACvB,KAAK,EAAEhB,IAAK;YAACwC,QAAQ,EAAE1B;UAAa;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzFzC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,OAAO;YAACuC,WAAW,EAAC,OAAO;YAACvB,KAAK,EAAEd,KAAM;YAACsC,QAAQ,EAAE1B;UAAa;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5FzC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,KAAK;YAACuC,WAAW,EAAC,KAAK;YAACvB,KAAK,EAAEZ,GAAI;YAACoC,QAAQ,EAAE1B;UAAa;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtFzC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,QAAQ;YAACuC,WAAW,EAAC,QAAQ;YAACvB,KAAK,EAAEV,MAAO;YAACkC,QAAQ,EAAE1B;UAAa;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC/FzC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,MAAM;YAACuC,WAAW,EAAC,MAAM;YAACvB,KAAK,EAAER,IAAK;YAACgC,QAAQ,EAAE1B;UAAa;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzFzC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,UAAU;YAACuC,WAAW,EAAC,WAAW;YAACvB,KAAK,EAAEN,QAAS;YAAC8B,QAAQ,EAAE1B;UAAa;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACtGzC,OAAA;YAAQ2C,IAAI,EAAC,QAAQ;YAACtB,KAAK,EAAC,QAAQ;YAAAe,QAAA,EAAC;UAAsB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC,eAEPzC,OAAA;UAAAoC,QAAA,EAAI;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAE/BzC,OAAA;UAAM0C,QAAQ,EAAET,eAAgB;UAAAG,QAAA,gBAC9BpC,OAAA;YAAO2C,IAAI,EAAC,MAAM;YAACtC,IAAI,EAAC,SAAS;YAACwC,QAAQ,EAAEtB,gBAAiB;YAACuB,MAAM,EAAC;UAAM;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9EzC,OAAA;YAAQ2C,IAAI,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP,CAAC;AAAArC,EAAA,CAtGKD,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAwGpB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}